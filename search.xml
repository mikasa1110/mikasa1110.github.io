<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于指针</title>
      <link href="/2020/06/08/guan-yu-zhi-zhen/"/>
      <url>/2020/06/08/guan-yu-zhi-zhen/</url>
      
        <content type="html"><![CDATA[<h1 id="关于指针"><a href="#关于指针" class="headerlink" title="关于指针"></a>关于指针</h1><ul><li>&amp;是取地址符，表示&amp;a就表示a在内存中存放的地址</li><li>*是解引符</li><li>eg： int i=3；<br><br>&emsp;&emsp;      int *p；<br>&emsp;&emsp;<br>p=&i;<br><br>这样就把i的地址放到了p中，通过解引符 *p我们就能得到存的值。比如可以printf *p 这样就得到了3.</li><li>例如swap函数，如果我们只是在函数中交换，在main函数中却没法实现交换。但如果使用指针就可以。<br><br>eg:swap(int <em>p，int *q) 然后int t；t=</em>q；这样整就行了，主函数里面用swap（&amp;i，&amp;j）这样的就实现了交换。<h2 id="数组指针和数组指针"><a href="#数组指针和数组指针" class="headerlink" title="数组指针和数组指针"></a>数组指针和数组指针</h2></li><li>指针数组：首先它是一个数组，数组的元素都是指针，数组占多少个字节由数组本身的大小决定，每一个元素都是一个指针，在32 位系统下任何类型的指针永远是占4 个字节。它是“储存指针的数组”的简称。<br>数组指针：首先它是一个指针，它指向一个数组。在32 位系统下任何类型的指针永远是占4 个字节，至于它指向的数组占多少字节，不知道，具体要看数组大小。它是“指向数组的指针”的简称。</li></ul><p>下面到底哪个是数组指针，哪个是指针数组呢：<br>A)<br>int <em>p1[10];<br>B)<br>int (</em>p2)[10];<br>每次上课问这个问题，总有弄不清楚的。这里需要明白一个符号之间的优先级问题。</p><p>“[]”的优先级比“<em>”要高。p1 先与“[]”结合，构成一个数组的定义，数组名为p1，int *修饰的是数组的内容，即数组的每个元素。那现在我们清楚，这是一个数组，其包含10 个指向int 类型数据的指针，即指针数组。至于p2 就更好理解了，在这里“（）”的优先级比“[]”高，“</em>”号和p2 构成一个指针的定义，指针变量名为p2，int 修饰的是数组的内容，即数组的每个元素。数组在这里并没有名字，是个匿名数组。那现在我们清楚p2 是一个指针，它指向一个包含10 个int 类型数据的数组，即数组指针。我们可以借助下面的图加深理解：<br><img src="D:/BLOG/source/images/shuzu.jpg" alt="图示"><br><br></p><ul><li><p>eg:首先，定义一个数组[5], 将这个数组取个名字叫做a，a[5]；那么这个数组所存的变量类型是char *， 所以就有了char * a[5];—-定义一个能够存放5个指向为char的指针变量的数组。（有点拗口）。这里面的5个元素，取出任意一个都是一个char *的指针。</p><p>首先他是一个指针，定义一个指针 （<em>）， 并将这个指针取名为p（</em>p）；这个指针是指向一个存有5个char类型元素的数组的char [5], 所以 char (*p)[5]；主要这里，一定有小括号，原因是因为符号结合优先级的问题。</p></li></ul><p>说到这里，我们来看一哈二维数组a[3][5]；如果 p = a；那么可以完成2.0一样的元素访问。对于二维数组，我不知道老师是怎么给你们说的哈，在这里二维数组可以看作为多个一维数组组合成的。当然也有人说，没有多维的数组，我们在这里不讨论这个问题。 对于char a[3][5]，我们还是翻译一下：定义一个能够存放三个元素的数组a，a[3]，这三个数组的类型是一个能够存放5个char类型元素的数组char [5], char a[3][5]，也很拗口，但是慢点读，多读两遍，（如果把数组当作指针看）能否发现有那种指向指针的味道（二重指针的味道）。所以从这儿也可以看到数组指针与二维数组的相识性，和二重指针的相似性（不过还是那句话，是当作，不是就是）。<br>*首先说定义一个数组a[5]; 老师给我们说过，数组的标识符a，代表了这个数组的首地址。既然是地址，那我们开看看其与指针的关系。</p><p>int a[5] = { …}; int <em>p = a;<br>a利用数组的方式访问元素：a[1] = 5;   a[2] = a[3];     int i = a[4];<br>a利用指针的方式访问元素：</em>(a+1) = 5; <em>(a+2) = *(a+3); int i = *(a+4);<br>p利用数组的方式访问元素：p[1] = 5;   p[2] = p[3];     int i = p[4];<br>p利用指针的方式访问元素：</em>(p+1) = 5; *(p+2) = *(a+3); int i = *(p+4);<br>就上面的几个表达式可以看出，如果一个指针指向一个数组，那么这个指针变量和这个数组名可以几乎看作一个东西来使用（看作：意思你可以用一个东西去这么理解，但是你不能认为他们就是一个东西）。区别主要在于a不可以更改指向（a++：非法，p++合法）；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c语言实验课</title>
      <link href="/2020/05/24/c-yu-yan-shi-yan-ke/"/>
      <url>/2020/05/24/c-yu-yan-shi-yan-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="c语言实验课"><a href="#c语言实验课" class="headerlink" title="c语言实验课"></a>c语言实验课</h1><h2 id="第一次实验"><a href="#第一次实验" class="headerlink" title="第一次实验"></a>第一次实验</h2><ul><li>描述：<br>假设收银员的抽屉里有用不完的四种硬币：25¢，10¢，5¢和1¢，他需要找给客户找零。如何决定将哪些硬币交给顾客呢？要求硬币数量最少。</li><li>第一种写法int a=0,b=0,c=0,d=0;<br>while(sum&gt;0){<br>  if( sum &gt;= 25 ){<pre><code>sum-=25;d++;continue;</code></pre>  }<br>  if( sum &gt;= 10 ){<pre><code>sum-=10;c++;continue;</code></pre>  }<br>  if( sum &gt;= 5 ){<pre><code>sum-=5;b++;continue;</code></pre>  }<br>  if( sum &gt;= 1 ){<pre><code>sum-=1;a++;</code></pre>  }<br>}<br>printf(“%d”,a+b+c+d);<br>这很容易就能理解但是运用减法，还写了好几个循环。</li><li>第二个方法<br>int ti = 0, ti1 = 0, ti2 = 0, ti3 = 0;<br>ti=total/25;<br>total=total%25;<br>ti1=total/10;<br>total=total%10;<br>ti2=total/5;<br>total=total%5;<br>ti3=total;<br>printf(“%d”,ti+ti1+ti2+ti3);</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> c语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录搭建</title>
      <link href="/2020/05/24/ji-lu-da-jian/"/>
      <url>/2020/05/24/ji-lu-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次搭建"><a href="#第一次搭建" class="headerlink" title="第一次搭建"></a>第一次搭建</h1><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul><li>第一个原因就是想记录一下自己平时学习遇到的问题，因为想转专业，就注册了洛谷的账号做题，有时候做完题看到题解就会感叹别人方法的巧妙，想要记录这些巧妙的处理方法。</li><li>第二就是整理一些科目的题目的处理方法留作考试前复习用。</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ul><li>主要就是参照了b站上面的教程</li><li>搭建的时候遇到了一些困难，主要参照了csdn上面的教程<h2 id="关于以后"><a href="#关于以后" class="headerlink" title="关于以后"></a>关于以后</h2></li><li>希望自己能够坚持写下去吧，希望能转专业，希望以后能把网站优化，美化的更好。（老希望工程了）<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><a href="https://blog.csdn.net/victoryxa/article/details/103733655" target="_blank" rel="noopener">CSDN</a><br><a href="https://www.bilibili.com/video/BV1je41147Ma?p=8" target="_blank" rel="noopener">b站</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/23/hello-world/"/>
      <url>/2020/05/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
